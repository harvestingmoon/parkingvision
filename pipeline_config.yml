nodes:
- input.visual:
    source: test_video.MOV
- model.yolo:
    detect: ["person","car","motorcycle"]
- dabble.bbox_to_btm_midpoint
- dabble.zone_count:
     resolution: [1280,720]
     zones: [[[395,624], [544,611],[591,720],[415,720]], #manual input of the coords (in reality we will have to train a neural network to recognize parking lots e.g. using pklot testset)
     [[544,611],[683,598],[767,720],[591,720]],
     [[683,598],[834,591],[945,720],[767,720]],
     [[834,591],[974,576],[1066,689],[945,720]],
     [[974,576],[1093,600],[1224,682],[1066,689]],
     [[1093,600],[1283,586],[1281,676],[1224,682]],
    [[527,490],[624,490],[688,532],[576,532]], #the coords of the car driving past the lot lol
    [[491,459],[576,452],[624,490],[527,490]], #coords where vehicle drive past (the 2nd row)
    [[245,676],[395,624],[415,720],[246,720]], #first row of vehicles done
    [[35,509],[130,509],[120,557],[0,557]], #left side of second row 
    [[130,515],[233,505],[238,559],[120,557]], #
    [[233,505],[332,496],[352,551],[238,559]], #3
    [[332,496],[430,497],[467,545],[352,551]], #4
    [[430,497],[527,490],[576,532],[467,545]],
    [[624,490],[704,485],[788,524],[685,532]],
    [[704,485],[803,486],[882,515],[788,524]],
    [[803,486],[878,465],[973,507],[882,515]],
    [[878,465],[973,466],[1057,497],[973,507]],
    [[973,466],[1043,456],[1123,490],[1057,497]],
    [[21,411],[88,410],[76,430],[3,434]], # starting from top row onwards
    [[88,410],[155,403],[151,429],[76,430]],
    [[155,403],[221,404],[221,428],[151,429]],
    [[221,404],[288,401],[294,421],[221,428]],
    [[288,401],[360,400],[375,419],[294,421]],
    [[360,400],[415,398],[433,417],[375,419]], 
    [[415,398],[485,396],[506,414],[433,417]], #spacing lot
    [[485,396 ],[570,391],[590,411],[506,414]],
    [[570,391],[610,392],[643,406],[590,411]],
    [[610,392],[670,392],[705,404],[643,406]],
    [[670,392],[724,384],[768,404],[705,404]],
    [[724,384],[794,378],[832,397],[768,404]] #adjacent parking lot (we will stop from here)
    ]
     # we will have to draw out the zones literally on pixel bro to figure out what it is
- dabble.bbox_count
- dabble.fps
- dabble.statistics:
    identity: count
- draw.bbox:
    show_labels: True
- draw.btm_midpoint
- draw.zones
- draw.legend:
    show: ["fps","count", "cum_avg"]
- output.media_writer

